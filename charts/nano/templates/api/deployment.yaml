{{- if .Values.api.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nano.api.fullname" . }}
  labels:
    {{- include "nano.labels" . | nindent 4 }}
    app.kubernetes.io/component: api
spec:
  replicas: {{ .Values.api.replicas }}
  {{- with .Values.api.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "nano.api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/api/secrets.yaml") . | sha256sum }}
        checksum/secrets-database: {{ include (print $.Template.BasePath "/database/secrets.yaml") . | sha256sum }}
        {{- with .Values.api.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "nano.api.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: api
    spec:
      {{- with .Values.api.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nano.api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.api.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-api
          securityContext:
            {{- toYaml .Values.api.securityContext | nindent 12 }}
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          command:
            - nano
            - api
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          envFrom:
            - secretRef:
                name: {{ include "nano.api.secrets" . }}
          env:
            - name: PORT
              value: "8080"
            - name: HOST
              value: "0.0.0.0"
            - name: NANO_APP_URL
              value: {{ .Values.config.appUrl | quote }}
            - name: DATABASE_TYPE
              value: "postgres"
            - name: DATABASE_HOST
              value: {{ include "nano.database.host" . | quote }}
            - name: DATABASE_PORT
              value: {{ include "nano.database.port" . | quote }}
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "nano.database.secrets" . }}
                  key: username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "nano.database.secrets" . }}
                  key: password
            - name: DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "nano.database.secrets" . }}
                  key: database
            - name: DATABASE_SYNCRONIZE
              value: {{ .Values.config.database.synchronize | default "false" | quote }}
            {{- if and .Values.runners.enabled .Values.config.runners.autoRegister }}
            - name: NANO_RUNNER_INITIAL_SERVERS
              value: {{ include "nano.runners.initialServers" . | quote }}
            {{- end }}
            {{- range $key, $value := .Values.api.environment }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          {{- with .Values.api.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.api.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.api.startupProbe }}
          startupProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
          volumeMounts:
            {{- if .Values.api.persistence.enabled }}
            - name: storage
              mountPath: /app/storage
            {{- end }}
            - name: tmp
              mountPath: /tmp
      volumes:
        {{- if .Values.api.persistence.enabled }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ include "nano.api.fullname" . }}-storage
        {{- end }}
        - name: tmp
          emptyDir: {}
      {{- with .Values.api.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
