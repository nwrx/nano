{{- if .Values.runners.enabled -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "nano.runners.fullname" . }}
  labels:
    {{- include "nano.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "nano.runners.fullname" . }}-headless
  replicas: {{ .Values.runners.replicas }}
  selector:
    matchLabels:
      {{- include "nano.runners.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.runners.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "nano.runners.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.runners.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nano.runners.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.runners.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-runner
          securityContext:
            {{- toYaml .Values.runners.securityContext | nindent 12 }}
          image: "{{ .Values.runners.image.repository }}:{{ .Values.runners.image.tag }}"
          imagePullPolicy: {{ .Values.runners.image.pullPolicy }}
          command:
            - nano
            - runner
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: PORT
              value: "8080"
            - name: HOST
              value: "0.0.0.0"
            - name: RUNNER_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            {{- if .Values.config.runners.autoRegister }}
            - name: RUNNER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "nano.runners.secrets" . }}
                  key: token
            {{- end }}
            {{- range $key, $value := .Values.runners.environment }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.runners.resources | nindent 12 }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
      {{- with .Values.runners.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.runners.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.runners.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
