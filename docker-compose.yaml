name: nano

volumes:
  postgres:
    driver: local
  minio:
    driver: local

services:

  postgres:
    image: postgres
    environment:
      POSTGRES_USER: nano
      POSTGRES_PASSWORD: nano
      POSTGRES_DB: nano
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data

  # maildev:
  #   image: maildev/maildev:2.1.0
  #   container_name: maildev
  #   ports:
  #     - "1080:1080"
  #     - "1025:1025"

  # ollama:
  #   image: ollama/ollama:0.3.10
  #   container_name: ollama
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - driver: nvidia
  #             count: 1
  #             capabilities: [gpu]
  #   ports:
  #     - "11434:11434"
  #   volumes:
  #     - ollama:/root/.ollama

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    volumes:
      - minio:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 20s
      retries: 3

  minio-init:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 minio minio123;
      /usr/bin/mc mb myminio/nano-public --ignore-existing;
      /usr/bin/mc policy set public myminio/nano-public;
      exit 0;
      "

  app:
    image: nwrx/nano
    build:
      context: .
      dockerfile: Dockerfile
    command:
      - app
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - HOST=0.0.0.0
      - NUXT_PUBLIC_API_URL=http://localhost:3001
      - NUXT_PUBLIC_APP_URL=http://localhost:3000

  api:
    image: nwrx/nano
    build:
      context: .
      dockerfile: Dockerfile
    command:
      - api
    depends_on:
      - postgres
      - minio-init
    ports:
      - "3001:3001"
    env_file:
      - ./packages/api/.env
    environment:
      DATABASE_TYPE: postgres
      DATABASE_URL: postgres://nano:nano@postgres:5432/nano
      DATABASE_SYNCRONIZE: true
      NANO_STORAGE_PUBLIC_POOL_TYPE: s3
      NANO_STORAGE_PUBLIC_POOL_CONFIGURATION: |
        {
          "bucket": "nano-public",
          "region": "us-east-1",
          "endpoint": "http://localhost:9000",
          "accessKeyId": "minio",
          "secretAccessKey": "minio123"
        }

  runner-1:
    image: nwrx/nano
    build:
      context: .
      dockerfile: Dockerfile
    command:
      - runner
    ports:
      - "3010:3010"
    environment:
      - PORT=3010
      - HOST=0.0.0.0
      - RUNNER_NAME=nano-runner-1
      - RUNNER_TOKEN=your_runner_token_here

  runner-2:
    image: nwrx/nano
    build:
      context: .
      dockerfile: Dockerfile
    command:
      - runner
    ports:
      - "3011:3011"
    environment:
      - PORT=3011
      - HOST=0.0.0.0
      - RUNNER_NAME=nano-runner-2
      - RUNNER_TOKEN=your_runner_token_here

  runner-3:
    image: nwrx/nano
    build:
      context: .
      dockerfile: Dockerfile
    command:
      - runner
    ports:
      - "3012:3012"
    environment:
      - PORT=3012
      - HOST=0.0.0.0
      - RUNNER_NAME=nano-runner-3
      - RUNNER_TOKEN=your_runner_token_here
