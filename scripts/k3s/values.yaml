config:
  apiUrl: 'https://api.nwrx.local'
  appUrl: 'https://nwrx.local'

# Configure the Nano application service (frontend)
app:
  enabled: true
  replicas: 3
  image:
    repository: localhost:5000/nwrx/nano
    tag: latest
    pullPolicy: Always

# Configure the Nano API service (backend)
api:
  enabled: true
  replicas: 1
  image:
    repository: localhost:5000/nwrx/nano
    tag: latest
    pullPolicy: Always

# Configure the runners for Nano (workers)
runners:
  enabled: true
  replicas: 3
  image:
    repository: localhost:5000/nwrx/nano
    tag: latest
    pullPolicy: Always

# Configure the Nano database service (PostgreSQL)
db:
  enabled: true

# Ingress configuration for Nano services
ingress:
  enabled: true
  className: traefik
  annotations:
    traefik.ingress.kubernetes.io/websocket: 'true'
    traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
    traefik.ingress.kubernetes.io/redirect-entry-point: https
    traefik.ingress.kubernetes.io/redirect-permanent: 'true'
    traefik.ingress.kubernetes.io/router.tls: 'true'
    cert-manager.io/cluster-issuer: nano-local-ca-issuer
  tls:
    - secretName: nano-local-tls
      hosts:
        - nwrx.local
        - api.nwrx.local
        - cdn.nwrx.local
  hosts:
    - host: nwrx.local
      paths:
        - path: /
          pathType: Prefix
          service: app
    - host: api.nwrx.local
      paths:
        - path: /
          pathType: Prefix
          service: api
    - host: cdn.nwrx.local
      paths:
        - path: /
          pathType: Prefix
          service: storage

extraObjects:
  # Local self-signed issuer so we can extract CA to browser
  - apiVersion: cert-manager.io/v1
    kind: ClusterIssuer
    metadata:
      name: selfsigned
      namespace: nano
    spec:
      selfSigned: {}